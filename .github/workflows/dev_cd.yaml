name: Dev CD

on:
  push:
    branches:
      - "main"
      # you may add other branches to
      # activate deployment for them, too.

jobs:
  get_commit_version:
    runs-on: ubuntu-latest
    outputs:
      # export to be used in other jobs
      version: ${{ steps.get_commit_version.outputs.version }}
      branch: ${{ steps.get_commit_version.outputs.branch }}

    steps:
      - uses: actions/checkout@v2
        name: Check out code
        with:
          # fetch the entire history
          fetch-depth: 0

      - id: get_commit_version
        name: get commit version
        run: |
          BRANCH="$(git rev-parse --abbrev-ref HEAD)"
          if git describe --tags
          then
            VERSION="$(git describe --tags)-${BRANCH}"
          else
            # fallback if no tag set yet:
            COMMIT_HASH="$(git rev-parse --short HEAD)"
            COMMIT_NUMBER="$(git rev-list --count HEAD)"
            VERSION="0.0.0-${COMMIT_NUMBER}-${COMMIT_HASH}-${BRANCH}"
          fi
          # set as output:
          echo "commit version: ${BRANCH}"
          echo "commit version: ${VERSION}"
          echo "::set-output name=version::${VERSION}"
          echo "::set-output name=branch::${BRANCH}"

  push_to_docker_hub:
    runs-on: ubuntu-latest
    needs: get_commit_version
    steps:
      - uses: actions/checkout@v2
        name: Check out code

      - uses: docker/setup-qemu-action@v1
        name: Set up QEMU

      - uses: docker/setup-buildx-action@v1
        name: Set up Docker Buildx

      - uses: docker/login-action@v1
        name: Login to DockerHub
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/build-push-action@v2
        name: Build and push
        id: docker_build
        with:
          push: true
          tags: "ghga/${{ github.event.repository.name }}:${{ needs.get_commit_version.outputs.version }},ghga/${{ github.event.repository.name }}:${{ needs.get_commit_version.outputs.branch }}"

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/ghga/${{ github.event.repository.name }}:${{ needs.get_commit_version.outputs.version }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  update_deployment_repo:
    runs-on: ubuntu-latest
    needs:
      - get_commit_version
      - push_to_docker_hub
    env:
      DEPLOYMENT_CONFIG_REPO: ghga-de/helm
    steps:
      - name: trigger update in deployment repo
        run: |
          # access token needs to be of format: <username>:<personal_access_token>
          curl -X POST \
            "https://api.github.com/repos/${DEPLOYMENT_CONFIG_REPO}/dispatches" \
            -H 'Accept: application/vnd.github.everest-preview+json' \
            -u '${{ secrets.DEPLOYMENT_UPDATE_TOKEN }}' \
            --data '{
              "event_type": "new_app_version",
              "client_payload": {
                "deploy_filename": "${{ github.event.repository.name }}",
                "app_name": "${{ github.event.repository.name }}",
                "context": "${{ needs.get_commit_version.outputs.branch }}",
                "new_image_tag": "${{ needs.get_commit_version.outputs.version }}"
              }
            }'
